buildscript {
  if (project == rootProject) {
    repositories {
      google()
      mavenCentral()
      jcenter()
    }

    dependencies {
      classpath 'com.android.tools.build:gradle:3.5.3'
    }
  }
}

apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

android {
  compileSdkVersion safeExtGet('Rtmp_compileSdkVersion', 31)
  
  if (isNewArchitectureEnabled()) {
    buildFeatures {
      prefab true
    }
  }
  
  defaultConfig {
    minSdkVersion safeExtGet('Rtmp_minSdkVersion', 21)
    targetSdkVersion safeExtGet('Rtmp_targetSdkVersion', 31)
    versionCode 1
    versionName "1.0"
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }
  
  sourceSets {
    main {
      if (isNewArchitectureEnabled()) {
        java.srcDirs += [
          "build/generated/source/codegen/java"
        ]
      }
    }
  }
}

repositories {
  mavenLocal()
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url("$rootDir/../node_modules/react-native/android")
  }
  google()
  mavenCentral()
  jcenter()
  maven { url 'https://www.jitpack.io' }
}

dependencies {
  //noinspection GradleDynamicVersion
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "com.github.pedroSG94.RootEncoder:library:2.6.5"
  //Optional, allow use CameraXSource and CameraUvcSource 
  implementation "com.github.pedroSG94.RootEncoder:extra-sources:2.6.5"
  implementation "com.facebook.react:react-native:+"  // From node_modules
}
